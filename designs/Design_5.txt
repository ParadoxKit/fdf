/*#
    (file comments must start with '#')
    Any whitespace in the file, except when in a string, should be skipped,
    this will make parsing singleline and multiline consistent
*/


// Simple data examples
appVersion=1.0.0.0   // version - Version
name="MyGame"        // string  - String (Characters within quotes)
name2='MyGame2'
enabled1=true        // bool    - Bool (true or false)
enabled2=false
id=12345             // int     - Integer number
uuid="a123-xyz"      // string  - String
pi=3.14              // float   - Floating point number

resolution=1920x1080  // number2 - 2D number (can be float) (number2, int2, float2)
scale=1.0x1.0x1.0     // number3 - 3D number (can be float) (number3, int3, float3)
gradient=1x50x10x1    // number4 - 4D number (can be float) (number4, int4, float4)
four=1x2x3x4x5        // number5 - 5D number (can be float) (number5, int5, float5)

value=null                // null      - Represents absence of a value
color=0xFF5733#           // hex       - Hexadecimal number

datetime=2024-12-24T15:30:00  // timestamp - Represents a date + time
date=2024-12-24               // timestamp - Represents a date + time
time=15:30:00                 // timestamp - Represents a date + time


// Other string use cases
directory="C:/TestFolder"              // string - path
filepath="C:/TestFolder/TestFile.txt"  // string - path

site="www.google.com"    // string - url
IP1="127.0.0.1"          // string - ipv4
IP2="127.0.0.1:8080"     // string - ipv4 with port number
IP3="2001:d8::1"         // string - ipv6
IP4="[2001:d8::1]:8080"  // string - ipv6 with port number


gameSettings1{ resolution=1920x1080, fullscreen=true, volume=75 }

// Map (multi line)
gameSettings2
{
    resolution=1920x1080
    fullscreen=true
    volume=75
}

// Array of simple data (single line)
tags1[ "config", "map", "example" ]
levels1[ 1, 2, 3, 4, 5 ]

/*
 Array of simple data
 (multi line)
*/
tags2[
    "config",   // Commas are optional, if you use new lines
    "map",      //
    "example",  // They are also allowed for last element
]

levels2
[
    1
    2
    4
    3
    5
]

levels3
[
    1, 2  // You are allowed to put some entries in the same line
    4, 3  //
    5     // And some entries in a new line
]

// Maps within map
gameItems1
{
    id=1
    name="Potion"

    properties
    {
        type="Health"
        effect="Restores HP"
    }
    
    effects
    {
        duration=30
        strength=50
    }
}

// Maps within map (another representation)
gameItems2
{
    id=1
    name="Potion"

    properties { type="Health", effect="Restores HP" }
    effects { duration=30, strength=50 }
}

// Array of maps
gameItems3
[
    { id=1, name="Potion" }
    { id=2, name="Elixir" }
    { id=3 }            // Unspecified fields defaults to null
    { id=4, name=null } // Same as previous one
]

// Array of maps within other maps
gameItems4
[
    { id=1, name="Potion", properties{ type="Health", effect="Restores HP" } }
    { id=2, name="Elixir", properties{ type="Mana", effect="Restores MP" } }
]

// Array of arrays with simple data
simpleData5
[
    [ 10, 20, 30 ]
    [ 40, 50, 60 ]
    [ 70, 80, 90 ]
]


// Variables and text formatting
escaped1="She said, \"Hello.\""
escaped2='She said, \'Hello.\''
escaped3='She said, "Hello."'
escaped4="She said, 'Hello.'"

name3="Test"
foo5=3.14
bar5='BAZ'

nameCopy=${name}  // Results in a string variable with value "Test"
fooCopy=${foo}    // Results in a float variable with value "3.14"

formatted1="${name}:${foo}-${bar}"  // Results in a string variable with value "Test:3.14-BAZ"
formatted2='${name}:${foo}-${bar}'  // Results in a string variable with value "Test:3.14-BAZ"
formatted3="\${name}:${foo}-${bar}" // Results in a string variable with value "${name}:3.14-BAZ"
formatted4='\${name}:${foo}-${bar}' // Results in a string variable with value "${name}:3.14-BAZ"

systemPath1="${ENV:PATH}"  // Results in a string variable with value contained in environment variable "PATH"
systemPath2='${ENV:PATH}'  // Results in a string variable with value contained in environment variable "PATH"

systemPath3[ ${ENV:PATH} ]  // Results in an array variable with value contained in environment variable "PATH" (each path converted to an array element)
